---
- hosts: all
  become: yes
  become_user: root
  gather_facts: true

  vars:
    repository:  https://github.com/mikecali/demo_app.git

  tasks:
#    - name: add epel repository
#      apt:
#         name: epel-release
#         state: present


    - name: configure timezone
      timezone:
        name: America/New_York

    - name: run apt-get update
      apt:
        update_cache: yes

    - name: install ansible
      apt:
        name: ansible
        state: latest
      when: "'ansible-host' in inventory_hostname"

    - name: Install Apache Webserver
      apt: name={{ item }} state=present
      with_items:
         - apache2
         - php
         - php-mysqlnd
         - git
      become: true
      when: "'web' in inventory_hostname"

    - name: http service state
      service: name=apache2 state=started enabled=yes
      become: true
      when: "'web' in inventory_hostname"

    - name: enabled mod_rewrite
      apache2_module: name=rewrite state=present
      notify:
        - restart apache2
      when: "'web' in inventory_hostname"

#     When enabled, this errors out because the detault server files already exist in "dest"
#    - name: Copy the code from repository
#      git: repo={{ repository }} dest=/var/www/html/
#      become: true
#      when: "'web' in inventory_hostname"

#      This was originally a centos playbook, firewalld doesn't exist.
#      To-do: add ufw related commands.
#    - name: Start firewalld
#      service:
#        state: restarted
#        name: firewalld
#      when: "'web' in inventory_hostname or 'ansible-host' in inventory_hostname"
#      become_user: root

#    - name: Allow apache
#      firewalld:
#        service: http
#        permanent: true
#        state: enabled
#        zone: public
#      when: "'web' in inventory_hostname"
#      become_user: root

    - name: Install and start Cockpit
      apt:
        name: cockpit
#        state: latest
      become_user: root

    - name: enable cockpit
      systemd:
        name: cockpit
        state: started
        enabled: yes
      become: true

    - name: Allow Cockpit to access the vm
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        insertafter: '#PasswordAuthentication'
        line: 'PasswordAuthentication yes'
      become: yes

    - name: Allow root login for cockpit
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        insertafter: '#PermitRootLogin'
        line: 'PermitRootLogin yes'
      become: yes

    - name: Restart sshd
      service:
        state: restarted
        name: sshd
        
#      This was originally a centos playbook, firewalld doesn't exist.
#    - name: Allow cockpit on firewalld
#      firewalld:
#         service: cockpit
#         permanent: true
#         state: enabled
#         zone: public
#      become_user: root

#    - name: Restart firewalld
#      service:
#        state: restarted
#        name: firewalld
#      when: "'web' in inventory_hostname or 'ansible-host' in inventory_hostname"
#      become_user: root

    - name: Copy vagrant key
      copy:
        src: keys/vagrant
        dest: /home/vagrant/.ssh/
        owner: vagrant
        group: vagrant
        mode: 0600
      when: "'ansible-host' in inventory_hostname"

  handlers:
    - name: restart apache2
      service: name=apache2 state=restarted
      when: "'web' in inventory_hostname"
